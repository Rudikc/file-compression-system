name: Build and Release Executable

on:
  push:
    tags:
      - "*"

jobs:
  build:
    permissions: write-all
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.13']

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Executable
        run: |
          pyinstaller --onefile main.py

      - name: Archive Executable
        run: |
          mkdir release
          # Rename the executable based on OS
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then mv dist/main release/main-linux; fi
          if [ "${{ matrix.os }}" == "macos-latest" ]; then mv dist/main release/main-macos; fi
          if [ "${{ matrix.os }}" == "windows-latest" ]; then mv dist/main.exe release/main-windows.exe; fi
          # Create archives
          cd release
          if [ "${{ matrix.os }}" == "windows-latest" ]; then powershell -Command "Compress-Archive -Path main-windows.exe -DestinationPath main-windows.zip"; else tar -czvf main-${{ matrix.os }}.tar.gz main-*; fi
        shell: bash
      - name: List Release Directory
        run: ls -R ./release
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-artifact
          path: release/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./release

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            ./release/ubuntu-latest-artifact/main-ubuntu-latest.tar.gz
            ./release/macos-latest-artifact/main-macos-latest.tar.gz
            ./release/windows-latest-artifact/main-windows.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Automatically generated release for multiple platforms.
